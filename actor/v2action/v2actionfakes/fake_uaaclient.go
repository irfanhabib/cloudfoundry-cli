// This file was generated by counterfeiter
package v2actionfakes

import (
	"sync"

	"code.cloudfoundry.org/cli/actor/v2action"
	"code.cloudfoundry.org/cli/api/uaa"
)

type FakeUAAClient struct {
	NewUserStub        func(username string, password string) (uaa.User, error)
	newUserMutex       sync.RWMutex
	newUserArgsForCall []struct {
		username string
		password string
	}
	newUserReturns struct {
		result1 uaa.User
		result2 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeUAAClient) NewUser(username string, password string) (uaa.User, error) {
	fake.newUserMutex.Lock()
	fake.newUserArgsForCall = append(fake.newUserArgsForCall, struct {
		username string
		password string
	}{username, password})
	fake.recordInvocation("NewUser", []interface{}{username, password})
	fake.newUserMutex.Unlock()
	if fake.NewUserStub != nil {
		return fake.NewUserStub(username, password)
	} else {
		return fake.newUserReturns.result1, fake.newUserReturns.result2
	}
}

func (fake *FakeUAAClient) NewUserCallCount() int {
	fake.newUserMutex.RLock()
	defer fake.newUserMutex.RUnlock()
	return len(fake.newUserArgsForCall)
}

func (fake *FakeUAAClient) NewUserArgsForCall(i int) (string, string) {
	fake.newUserMutex.RLock()
	defer fake.newUserMutex.RUnlock()
	return fake.newUserArgsForCall[i].username, fake.newUserArgsForCall[i].password
}

func (fake *FakeUAAClient) NewUserReturns(result1 uaa.User, result2 error) {
	fake.NewUserStub = nil
	fake.newUserReturns = struct {
		result1 uaa.User
		result2 error
	}{result1, result2}
}

func (fake *FakeUAAClient) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.newUserMutex.RLock()
	defer fake.newUserMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeUAAClient) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ v2action.UAAClient = new(FakeUAAClient)
