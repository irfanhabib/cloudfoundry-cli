---
groups:
- name: create
  jobs:
  - setup-infrastructure
  - deploy-cf
- name: delete
  jobs:
  - delete-cf
  - delete-infrastructure

resources:
- name: freshen-((stack-name))
  type: time
  source:
    start: 09:00 PM
    stop: 10:00 PM
    location: America/Los_Angeles
    days: [Saturday]
- name: cf-deployment-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
    tag_filter: v6.*
- name: cli-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/cli
    branch: master
    path: ci
- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    tag_filter: v1.*
- name: ops-files
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    tag_filter: v1.*
- name: state
  type: git
  source:
    uri: git@github.com:cloudfoundry/cli-private
    private_key: ((cli-private-github-private-key))
    branch: master
    paths:
    - ci/infrastructure/((stack-name))/bbl-state.json
- name: cf-state
  type: git
  source:
    uri: git@github.com:cloudfoundry/cli-private
    private_key: ((cli-private-github-private-key))
    branch: master
    paths:
    - ci/infrastructure/((stack-name))/deployment-vars.yml

jobs:
- name: setup-infrastructure
  serial_groups: [((stack-name))]
  build_logs_to_retain: 100
  plan:
  - get: freshen-((stack-name))
    trigger: true
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: state
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    input_mapping:
      bbl-config: state
      bbl-state: state
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: ((google-account-creds))
      BBL_GCP_PROJECT_ID: ((gcp-project))
      BBL_GCP_REGION: us-central1
      BBL_GCP_ZONE: us-central1-f
      BBL_LB_CERT: ((ssl-cert))
      BBL_LB_KEY: ((ssl-cert-private-key))
      LB_DOMAIN: ((stack-name)).cli.fun
      BBL_ENV_NAME: ((stack-name))
      BBL_STATE_DIR: ci/infrastructure/((stack-name))
    ensure:
      put: state
      params:
        repository: updated-bbl-state
        rebase: true

- name: deploy-cf
  serial_groups: [((stack-name))]
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: state
      passed: [setup-infrastructure]
      trigger: true
    - get: cf-state
    - get: cf-deployment
    - get: ops-files
    - get: cli-ci
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: state
    params:
      INFRASTRUCTURE: google
      BBL_STATE_DIR: ci/infrastructure/((stack-name))
  - task: create-vars-file
    file: cli-ci/ci/infrastructure/tasks/create-vars-file.yml
    params:
      CLIENT_SECRET: ((client-secret))
  - task: copy-ops-files
    file: cli-ci/ci/infrastructure/tasks/combine-inputs.yml
    input_mapping:
      input1: ops-files
      input2: cli-ci
    params:
      COPY_PATHS: "input1/operations/scale-to-one-az.yml input1/operations/test/add-persistent-isolation-segment-diego-cell.yml input1/operations/use-compiled-releases.yml input2/ci/infrastructure/operations/cli-isolation-cell-overrides.yml input2/ci/infrastructure/operations/default-app-memory.yml input2/ci/infrastructure/operations/diego-cell-instances.yml input2/ci/infrastructure/operations/skip-ssl-override.yml input2/ci/infrastructure/operations/uaa-vm_type-override.yml input2/ci/infrastructure/operations/add-uaa-client-credentials.yml"
  - task: deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: state
      vars-store: cf-state
      vars-files: vars_path
      ops-files: combine_inputs_output
    params:
      SYSTEM_DOMAIN: ((stack-name)).cli.fun
      OPS_FILES: "add-persistent-isolation-segment-diego-cell.yml use-compiled-releases.yml cli-isolation-cell-overrides.yml default-app-memory.yml skip-ssl-override.yml scale-to-one-az.yml diego-cell-instances.yml uaa-vm_type-override.yml add-uaa-client-credentials.yml"
      VARS_STORE_FILE: ci/infrastructure/((stack-name))/deployment-vars.yml
      VARS_FILES: vars.yml
      BBL_STATE_DIR: ci/infrastructure/((stack-name))
    ensure:
      put: cf-state
      params:
        repository: updated-vars-store
        rebase: true
  - task: bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: state
    params:
      BBL_STATE_DIR: ci/infrastructure/((stack-name))
      CLEAN_ALL: true

- name: delete-cf
  serial_groups: [((stack-name))]
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: state
  - task: delete-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: state
    params:
      BBL_STATE_DIR: ci/infrastructure/((stack-name))

- name: delete-infrastructure
  serial_groups: [((stack-name))]
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: state
  - task: bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: state
    params:
      BBL_STATE_DIR: ci/infrastructure/((stack-name))
      CLEAN_ALL: true
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: state
    params:
      BBL_STATE_DIR: ci/infrastructure/((stack-name))
      BBL_GCP_SERVICE_ACCOUNT_KEY: ((google-account-creds))
    ensure:
      put: state
      params:
        repository: updated-bbl-state
        rebase: true
