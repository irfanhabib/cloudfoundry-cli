// This file was generated by counterfeiter
package fakes

import (
	"sync"
	"github.com/cloudfoundry/cli/cf/actors"
	"github.com/cloudfoundry/cli/cf/models"
)

type FakeServicePlanActor struct {
	GetSingleServicePlanStub        func(string, string) (models.ServicePlanFields, error)
	getSingleServicePlanMutex       sync.RWMutex
	getSingleServicePlanArgsForCall []struct {
		arg1 string
		arg2 string
	}
	getSingleServicePlanReturns struct {
		result1 models.ServicePlanFields
		result2 error
	}
	SetServicePlanPublicStub        func(models.ServicePlanFields) error
	setServicePlanPublicMutex       sync.RWMutex
	setServicePlanPublicArgsForCall []struct {
		arg1 models.ServicePlanFields
	}
	setServicePlanPublicReturns struct {
		result1 error
	}
}

func (fake *FakeServicePlanActor) GetSingleServicePlan(arg1 string, arg2 string) (models.ServicePlanFields, error) {
	fake.getSingleServicePlanMutex.Lock()
	defer fake.getSingleServicePlanMutex.Unlock()
	fake.getSingleServicePlanArgsForCall = append(fake.getSingleServicePlanArgsForCall, struct {
		arg1 string
		arg2 string
	}{arg1, arg2})
	if fake.GetSingleServicePlanStub != nil {
		return fake.GetSingleServicePlanStub(arg1, arg2)
	} else {
		return fake.getSingleServicePlanReturns.result1, fake.getSingleServicePlanReturns.result2
	}
}

func (fake *FakeServicePlanActor) GetSingleServicePlanCallCount() int {
	fake.getSingleServicePlanMutex.RLock()
	defer fake.getSingleServicePlanMutex.RUnlock()
	return len(fake.getSingleServicePlanArgsForCall)
}

func (fake *FakeServicePlanActor) GetSingleServicePlanArgsForCall(i int) (string, string) {
	fake.getSingleServicePlanMutex.RLock()
	defer fake.getSingleServicePlanMutex.RUnlock()
	return fake.getSingleServicePlanArgsForCall[i].arg1, fake.getSingleServicePlanArgsForCall[i].arg2
}

func (fake *FakeServicePlanActor) GetSingleServicePlanReturns(result1 models.ServicePlanFields, result2 error) {
	fake.GetSingleServicePlanStub = nil
	fake.getSingleServicePlanReturns = struct {
		result1 models.ServicePlanFields
		result2 error
	}{result1, result2}
}

func (fake *FakeServicePlanActor) SetServicePlanPublic(arg1 models.ServicePlanFields) error {
	fake.setServicePlanPublicMutex.Lock()
	defer fake.setServicePlanPublicMutex.Unlock()
	fake.setServicePlanPublicArgsForCall = append(fake.setServicePlanPublicArgsForCall, struct {
		arg1 models.ServicePlanFields
	}{arg1})
	if fake.SetServicePlanPublicStub != nil {
		return fake.SetServicePlanPublicStub(arg1)
	} else {
		return fake.setServicePlanPublicReturns.result1
	}
}

func (fake *FakeServicePlanActor) SetServicePlanPublicCallCount() int {
	fake.setServicePlanPublicMutex.RLock()
	defer fake.setServicePlanPublicMutex.RUnlock()
	return len(fake.setServicePlanPublicArgsForCall)
}

func (fake *FakeServicePlanActor) SetServicePlanPublicArgsForCall(i int) models.ServicePlanFields {
	fake.setServicePlanPublicMutex.RLock()
	defer fake.setServicePlanPublicMutex.RUnlock()
	return fake.setServicePlanPublicArgsForCall[i].arg1
}

func (fake *FakeServicePlanActor) SetServicePlanPublicReturns(result1 error) {
	fake.SetServicePlanPublicStub = nil
	fake.setServicePlanPublicReturns = struct {
		result1 error
	}{result1}
}

var _ actors.ServicePlanActor = new(FakeServicePlanActor)
