// This file was generated by counterfeiter
package fakes

import (
	"github.com/cloudfoundry/cli/cf/actors"
	"github.com/cloudfoundry/cli/cf/models"
	"sync"
)

type FakeServiceActor struct {
	GetAllBrokersWithDependenciesStub     func() ([]models.ServiceBroker, error)
	getBrokersWithDependenciesMutex       sync.RWMutex
	getBrokersWithDependenciesArgsForCall []struct{}
	getBrokersWithDependenciesReturns     struct {
		result1 []models.ServiceBroker
		result2 error
	}
}

func (fake *FakeServiceActor) GetAllBrokersWithDependencies() ([]models.ServiceBroker, error) {
	fake.getBrokersWithDependenciesMutex.Lock()
	defer fake.getBrokersWithDependenciesMutex.Unlock()
	fake.getBrokersWithDependenciesArgsForCall = append(fake.getBrokersWithDependenciesArgsForCall, struct{}{})
	if fake.GetAllBrokersWithDependenciesStub != nil {
		return fake.GetAllBrokersWithDependenciesStub()
	} else {
		return fake.getBrokersWithDependenciesReturns.result1, fake.getBrokersWithDependenciesReturns.result2
	}
}

func (fake *FakeServiceActor) GetAllBrokersWithDependenciesCallCount() int {
	fake.getBrokersWithDependenciesMutex.RLock()
	defer fake.getBrokersWithDependenciesMutex.RUnlock()
	return len(fake.getBrokersWithDependenciesArgsForCall)
}

func (fake *FakeServiceActor) GetAllBrokersWithDependenciesReturns(result1 []models.ServiceBroker, result2 error) {
	fake.GetAllBrokersWithDependenciesStub = nil
	fake.getBrokersWithDependenciesReturns = struct {
		result1 []models.ServiceBroker
		result2 error
	}{result1, result2}
}

var _ actors.ServiceActor = new(FakeServiceActor)
