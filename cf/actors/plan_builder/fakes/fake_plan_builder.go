// This file was generated by counterfeiter
package fakes

import (
	. "github.com/cloudfoundry/cli/cf/actors/plan_builder"
	"github.com/cloudfoundry/cli/cf/models"
	"sync"
)

type FakePlanBuilder struct {
	AttachOrgsToPlansStub        func([]models.ServicePlanFields) ([]models.ServicePlanFields, error)
	attachOrgsToPlansMutex       sync.RWMutex
	attachOrgsToPlansArgsForCall []struct {
		arg1 []models.ServicePlanFields
	}
	attachOrgsToPlansReturns struct {
		result1 []models.ServicePlanFields
		result2 error
	}
	GetPlansForServiceStub        func(string) ([]models.ServicePlanFields, error)
	getPlansForServiceMutex       sync.RWMutex
	getPlansForServiceArgsForCall []struct {
		arg1 string
	}
	getPlansForServiceReturns struct {
		result1 []models.ServicePlanFields
		result2 error
	}
	GetPlansVisibleToOrgStub        func(string) ([]models.ServicePlanFields, error)
	getPlansVisibleToOrgMutex       sync.RWMutex
	getPlansVisibleToOrgArgsForCall []struct {
		arg1 string
	}
	getPlansVisibleToOrgReturns struct {
		result1 []models.ServicePlanFields
		result2 error
	}
}

func (fake *FakePlanBuilder) AttachOrgsToPlans(arg1 []models.ServicePlanFields) ([]models.ServicePlanFields, error) {
	fake.attachOrgsToPlansMutex.Lock()
	defer fake.attachOrgsToPlansMutex.Unlock()
	fake.attachOrgsToPlansArgsForCall = append(fake.attachOrgsToPlansArgsForCall, struct {
		arg1 []models.ServicePlanFields
	}{arg1})
	if fake.AttachOrgsToPlansStub != nil {
		return fake.AttachOrgsToPlansStub(arg1)
	} else {
		return fake.attachOrgsToPlansReturns.result1, fake.attachOrgsToPlansReturns.result2
	}
}

func (fake *FakePlanBuilder) AttachOrgsToPlansCallCount() int {
	fake.attachOrgsToPlansMutex.RLock()
	defer fake.attachOrgsToPlansMutex.RUnlock()
	return len(fake.attachOrgsToPlansArgsForCall)
}

func (fake *FakePlanBuilder) AttachOrgsToPlansArgsForCall(i int) []models.ServicePlanFields {
	fake.attachOrgsToPlansMutex.RLock()
	defer fake.attachOrgsToPlansMutex.RUnlock()
	return fake.attachOrgsToPlansArgsForCall[i].arg1
}

func (fake *FakePlanBuilder) AttachOrgsToPlansReturns(result1 []models.ServicePlanFields, result2 error) {
	fake.attachOrgsToPlansReturns = struct {
		result1 []models.ServicePlanFields
		result2 error
	}{result1, result2}
}

func (fake *FakePlanBuilder) GetPlansForService(arg1 string) ([]models.ServicePlanFields, error) {
	fake.getPlansForServiceMutex.Lock()
	defer fake.getPlansForServiceMutex.Unlock()
	fake.getPlansForServiceArgsForCall = append(fake.getPlansForServiceArgsForCall, struct {
		arg1 string
	}{arg1})
	if fake.GetPlansForServiceStub != nil {
		return fake.GetPlansForServiceStub(arg1)
	} else {
		return fake.getPlansForServiceReturns.result1, fake.getPlansForServiceReturns.result2
	}
}

func (fake *FakePlanBuilder) GetPlansForServiceCallCount() int {
	fake.getPlansForServiceMutex.RLock()
	defer fake.getPlansForServiceMutex.RUnlock()
	return len(fake.getPlansForServiceArgsForCall)
}

func (fake *FakePlanBuilder) GetPlansForServiceArgsForCall(i int) string {
	fake.getPlansForServiceMutex.RLock()
	defer fake.getPlansForServiceMutex.RUnlock()
	return fake.getPlansForServiceArgsForCall[i].arg1
}

func (fake *FakePlanBuilder) GetPlansForServiceReturns(result1 []models.ServicePlanFields, result2 error) {
	fake.getPlansForServiceReturns = struct {
		result1 []models.ServicePlanFields
		result2 error
	}{result1, result2}
}

func (fake *FakePlanBuilder) GetPlansVisibleToOrg(arg1 string) ([]models.ServicePlanFields, error) {
	fake.getPlansVisibleToOrgMutex.Lock()
	defer fake.getPlansVisibleToOrgMutex.Unlock()
	fake.getPlansVisibleToOrgArgsForCall = append(fake.getPlansVisibleToOrgArgsForCall, struct {
		arg1 string
	}{arg1})
	if fake.GetPlansVisibleToOrgStub != nil {
		return fake.GetPlansVisibleToOrgStub(arg1)
	} else {
		return fake.getPlansVisibleToOrgReturns.result1, fake.getPlansVisibleToOrgReturns.result2
	}
}

func (fake *FakePlanBuilder) GetPlansVisibleToOrgCallCount() int {
	fake.getPlansVisibleToOrgMutex.RLock()
	defer fake.getPlansVisibleToOrgMutex.RUnlock()
	return len(fake.getPlansVisibleToOrgArgsForCall)
}

func (fake *FakePlanBuilder) GetPlansVisibleToOrgArgsForCall(i int) string {
	fake.getPlansVisibleToOrgMutex.RLock()
	defer fake.getPlansVisibleToOrgMutex.RUnlock()
	return fake.getPlansVisibleToOrgArgsForCall[i].arg1
}

func (fake *FakePlanBuilder) GetPlansVisibleToOrgReturns(result1 []models.ServicePlanFields, result2 error) {
	fake.getPlansVisibleToOrgReturns = struct {
		result1 []models.ServicePlanFields
		result2 error
	}{result1, result2}
}

var _ PlanBuilder = new(FakePlanBuilder)
