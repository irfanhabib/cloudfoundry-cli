// This file was generated by counterfeiter
package cloudcontrollerv2fakes

import (
	"sync"

	"code.cloudfoundry.org/cli/api/cloudcontroller/ccv2"
)

type FakeConnection struct {
	MakeStub        func(passedRequest ccv2.Request, passedResponse *ccv2.Response) error
	makeMutex       sync.RWMutex
	makeArgsForCall []struct {
		passedRequest  ccv2.Request
		passedResponse *ccv2.Response
	}
	makeReturns struct {
		result1 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeConnection) Make(passedRequest ccv2.Request, passedResponse *ccv2.Response) error {
	fake.makeMutex.Lock()
	fake.makeArgsForCall = append(fake.makeArgsForCall, struct {
		passedRequest  ccv2.Request
		passedResponse *ccv2.Response
	}{passedRequest, passedResponse})
	fake.recordInvocation("Make", []interface{}{passedRequest, passedResponse})
	fake.makeMutex.Unlock()
	if fake.MakeStub != nil {
		return fake.MakeStub(passedRequest, passedResponse)
	} else {
		return fake.makeReturns.result1
	}
}

func (fake *FakeConnection) MakeCallCount() int {
	fake.makeMutex.RLock()
	defer fake.makeMutex.RUnlock()
	return len(fake.makeArgsForCall)
}

func (fake *FakeConnection) MakeArgsForCall(i int) (ccv2.Request, *ccv2.Response) {
	fake.makeMutex.RLock()
	defer fake.makeMutex.RUnlock()
	return fake.makeArgsForCall[i].passedRequest, fake.makeArgsForCall[i].passedResponse
}

func (fake *FakeConnection) MakeReturns(result1 error) {
	fake.MakeStub = nil
	fake.makeReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeConnection) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.makeMutex.RLock()
	defer fake.makeMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeConnection) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ ccv2.Connection = new(FakeConnection)
